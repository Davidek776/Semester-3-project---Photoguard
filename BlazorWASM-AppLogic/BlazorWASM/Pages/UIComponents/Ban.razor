@using System.Security.Claims

@using BlazorWasm.Services
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@namespace UIComponents
@inject IReportService reportService
@inject NavigationManager navMgr
@inject IBanService banService
@inject IAuthService authService
@using Domain.Models




<Alert Type="success" Show="@showAlert">
    <div class="w-full">
        <p >Thank you for contributing to build community who cares!</p>
        @* <button @onclick="@(() => showAlert = false)>close</button> *@
        <button @onclick="(() => {showAlert = false;showBanField = false;})"><strong>close</strong></button>
    </div>
</Alert>

<li @onclick:preventDefault="true" @onclick="@(() => showBanField = true)">
    <a href="#" class="flex items-center px-3 py-2 hover:bg-gray-200 hover:text-gray-800 rounded-md dark:hover:bg-gray-800">
        <i class="uil-edit-alt mr-1"></i> Ban Post
    </a>
</li>

@if (showBanField)
{
    <input type="text" @bind="reason" >
    <button
        @onclick="BanAsync">
        Ban
    </button>

    <label>@msg</label>

}

@code {

    [Parameter]
    public Domain.Models.Report? Report { get; set; }
    [Parameter]
    public EventCallback<string> OnClickCallback { get; set; }

    [Parameter]
    public Admin? Admin { get; set; }

    public bool showBanField;

    private string msg = "";
    private string reason = "";
    private bool showAlert;


    public async Task BanAsync()
    {

        if (Admin != null)
        {

            BanCreationDto dto = new BanCreationDto
            {
                Admin = Admin.username,
                PostId = Report.reportedPost.Id,
                Reason = reason
            };
            await banService.CrateAsync(dto);

            await OnClickCallback.InvokeAsync();


        }
    }
}