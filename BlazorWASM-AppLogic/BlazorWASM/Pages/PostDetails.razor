@page "/posts/{Id:int}"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@using System.Security.Claims
@using BlazorWasm.Services
@inject IPostService postService
@inject IAuthService authService
@inject IUserService userService
@inject ILikeService likeService
@inject NavigationManager navMgr
@using UIComponents

@if (post != null)
{
	<SinglePost Post="post"/>
}
else
{
	<NotFound/>
}

@code {
    private Post? post;
	bool postLiked;
	private long userId;
	private bool isSucceed;


	[Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
	    try
        {
	        

	        IEnumerable<Post> posts = await postService.GetAsync(Id);
	        post = posts.FirstOrDefault();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

	async Task PostLikeClicked(bool isLiked)
	{
		
		try
		{
			if (isLiked)
			{
				postLiked = isLiked;
			}
			else if (!isLiked)
			{
				ClaimsPrincipal context = await authService.GetAuthAsync();
				var claims = context.Identities.First().Claims.ToList();
				string? id = claims?.FirstOrDefault(x => x.Type.Equals("Id", StringComparison.OrdinalIgnoreCase))?.Value;
				LikePostDto dto = new LikePostDto(Id, int.Parse(id));
				await likeService.LikePostAsync(dto);
				isSucceed = true;
			}
		}
		catch (Exception e)
		{
			Console.WriteLine(e);
			throw;
		}
	}
	


}
