@page "/posts/create"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@using Domain.Models
@using global::Shared
@using global::UIComponents
@using UIComponents
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject NavigationManager navMgr
@inject IPostService postService
@inject IImageUploadService imageUploadService
<body>

<div id="wrapper">

<div class="sidebar">
    <div class="sidebar_header border-b border-gray-200 from-gray-100 to-gray-50 bg-gradient-to-t  uk-visible@s">
        <a href="#">
            <img src="assets/images/logo.png">
            <img src="assets/images/logo-light.png" class="logo_inverse">
        </a>
        <!-- btn night mode -->
        <a href="#" id="night-mode" class="btn-night-mode" data-tippy-placement="left" title="Switch to dark mode"></a>
    </div>
    <div class="border-b border-gray-20 flex justify-between items-center p-3 pl-5 relative uk-hidden@s">
        <h3 class="text-xl"> Navigation </h3>
        <span class="btn-mobile" uk-toggle="target: #wrapper ; cls: sidebar-active"></span>
    </div>
    <div class="sidebar_inner" data-simplebar>
        <div class="flex flex-col items-center my-6 uk-visible@s">
            <div
                class="bg-gradient-to-tr from-yellow-600 to-pink-600 p-1 rounded-full transition m-0.5 mr-2  w-24 h-24">
                <img src="assets/images/avatars/avatar-2.jpg"
                     class="bg-gray-200 border-4 border-white rounded-full w-full h-full">
            </div>
            <a href="profile.html" class="text-xl font-medium capitalize mt-4 uk-link-reset"> Stella Johnson
            </a>
            <div class="flex justify-around w-full items-center text-center uk-link-reset text-gray-800 mt-6">
                <div>
                    <a href="#">
                        <strong>Post</strong>
                        <div> 130</div>
                    </a>
                </div>
                <div>
                    <a href="#">
                        <strong>Following</strong>
                        <div> 1,230</div>
                    </a>
                </div>
                <div>
                    <a href="#">
                        <strong>Followers</strong>
                        <div> 2,430</div>
                    </a>
                </div>
            </div>
        </div>
        <hr class="-mx-4 -mt-1 uk-visible@s">
        <ul>
            <li>
                <a href="feed.html">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"/>
                    </svg>
                    <span> Feed </span> </a>
            </li>
            <li>
                <a href="explore.html">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                    </svg>
                    <span> Explore </span> </a>
            </li>
            <li>
                <a href="chat.html">
                    <i class="uil-location-arrow"></i>
                    <span> Messages </span> <span class="nav-tag"> 3</span> </a>
            </li>
            <li>
                <a href="trending.html">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z"/>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z"/>
                    </svg>
                    <span> Trending </span> </a>
            </li>
            <li class="active">
                <a href="market.html">
                    <i class="uil-store"></i>
                    <span> Marketplace </span> </a>
            </li>
            <li>
                <a href="setting.html">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                    </svg>
                    <span> Settings </span>
                </a>
                <ul>
                    <li><a href="setting.html">General </a></li>
                    <li><a href="setting.html"> Account setting </a></li>
                    <li><a href="setting.html">Billing <span class="nav-tag">3</span> </a></li>
                </ul>
            </li>
            <li>
                <a href="profile.html">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                    </svg>
                    <span> My Profile </span> </a>
            </li>
            <li>
                <hr class="my-2">
            </li>
            <li>
                <a href="form-login.html">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                         stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                    </svg>
                    <span> Logout </span> </a>
            </li>
        </ul>
    </div>
</div>

<!-- create post -->
<div class="main_content">
    <div id="offcanvas-create flex justify-center ">
        <div class="alertBox pt-6">
            <Alert Type="success" Show="true">
                <p>Successfully created post!</p>
                <button @onclick="@NavigateToPost">show me</button>
                <button @onclick="(() => showAlert = false)">close</button>
            </Alert>
        </div>
        <div class=" lg:w-full dark:bg-gray-700 dark:text-gray-300 p-0">

            <button class="uk-offcanvas-close" type="button" uk-close></button>

            <!-- notivication header -->
            <div class="-mb-1 border-b font-semibold px-5 py-5 text-lg">
                <h4>Sell new product </h4>
            </div>

            <div class=" p-6 space-y-3">
                <div>
                    <label class="mb-0"> Title </label>
                    <input placeholder="Title" @bind="postTitle" class="bg-gray-100 dark:bg-gray-600 shadow-none border focus:border-blue-600 mt-2 outline-none px-3 py-2 rounded-md w-full">
                </div>
                <div>
                    <label class="mb-0"> Description </label>
                    <textarea name="description" rows="3" @bind="postDescription" class="bg-gray-100 shadow-none border mt-2 w-full px-3 py-2 rounded-md focus:border-blue-600 outline-none mt- "id="description" placeholder="Please describe your product."></textarea>
                </div>
                <div>
                    <label class="mb-0"> Tags</label>
                    <textarea name="description" @bind="newTag"  rows="3" class="bg-gray-100 shadow-none border mt-2 w-full px-3 py-2 rounded-md focus:border-blue-600 outline-none mt- "id="description" placeholder="Please add tag."></textarea>
                    <button @onclick="@AddTag">add </button>

                </div>
                @foreach (string tag in postTags)
                {
                    <div class="flex">
                        @tag
                        <button @onclick="(() => RemoveTag(tag))" class="btn-close"></button>
                    </div>
                }



                <div>
                    <label class="mb-0"> Photos </label>
                </div>

                <div uk-form-custom class="w-full">
                    <div class="bg-gray-100 border-2 border-dashed flex flex-col h-32 items-center justify-center relative w-full rounded-lg dark:bg-gray-800 dark:border-gray-600">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-12">
                            <path d="M5.5 13a3.5 3.5 0 01-.369-6.98 4 4 0 117.753-1.977A4.5 4.5 0 1113.5 13H11V9.413l1.293 1.293a1 1 0 001.414-1.414l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13H5.5z"/>
                            <path d="M9 13h2v5a1 1 0 11-2 0v-5z"/>
                        </svg>
                    </div>
                    <InputFile OnChange="@OnChangeAsync" accept="image/png, image/jpeg"></InputFile>

                </div>

                <div class="checkbox">
                    <input type="checkbox" id="chekcbox1" checked="">
                    <label for="chekcbox1"><span class="checkbox-icon"></span> I agree to the <a href="pages-terms.html" target="_blank" class="uk-text-bold uk-text-small uk-link-reset"> Terms and Conditions </a>
                    </label>
                </div>
                <button type="button" @onclick="CreateAsync" class="bg-pink-600 font-semibold p-2 mt-2 rounded-md text-center text-white w-full">
                    Create </button>
                @if (!string.IsNullOrEmpty(msg))
                {
                    <label style="color: red">@msg</label>
                }

            </div>
            <MapComponent @ref="Map"></MapComponent>

        </div>

    </div>
</div>
</div>
</body>
@code {
     private ImageFile? filesBase64 = null;
    private string postTitle = "";
    private string postDescription = "";
    private IList<string> postTags = new List<string>();
    private string newTag = "";
    private bool showAlert;
    private int id;

	private MapComponent Map;

    private string msg = "";


	private async Task OnChangeAsync(InputFileChangeEventArgs e)
    {
        msg = "";
        filesBase64 = null;

        var files = e.GetMultipleFiles();
        foreach (var file in files)
        {

            var buf = new byte[file.Size];
            try
            {
                using (var stream = file.OpenReadStream(5_000_000))
                {
                    await stream.ReadAsync(buf);
                }
            }
            catch (Exception exception)
            {
                msg = "Image must be smaller than 5mb";
                Console.WriteLine(exception);
            }

            filesBase64 = (new ImageFile {base64data = Convert.ToBase64String(buf), contentType = file.ContentType, fileName = file.Name});
        }
    }


    private async Task CreateAsync()
    {
        if (!Validate())
            return;

        try
        {
	        // get image
            string imgUrl = await imageUploadService.UploadAsync(filesBase64);

	        Coordinate coordinates = await Map.GetCoordinates();

	        // get user id
			// TODO the user id is hardcoded in please change it with JWT to match the logged in user
            int? userId = AuthenticationStateProvider.GetAuthenticationStateAsync().Id;

            PostCreationDto dto = new(postTitle, userId ?? 1, postDescription, imgUrl, postTags, coordinates);

            id = await postService.CreateAsync(dto);

	        showAlert = true;
	        postTitle = "";
	        postDescription = "";
	        postTags = new List<string>();

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private bool Validate()
    {
        msg = "";
        if (string.IsNullOrEmpty(postTitle))
        {
            msg = "Title cannot be empty!";
            return false;
        }

        if (string.IsNullOrEmpty(postDescription))
        {
            msg = "Body cannot be empty!";
            return false;
        }

        if (filesBase64 == null || filesBase64.base64data.Equals(""))
        {
            msg = "Please upload an image";
            return false;
        }

        return true;
    }

    private void AddTag()
    {
        if (newTag.Equals("") || postTags.Contains(newTag))
        {
            return;
        }
        postTags.Add(newTag);
        newTag = "";
    }

    private void RemoveTag(string tag)
    {
        postTags.Remove(tag);
    }

    private void NavigateToPost()
    {
        navMgr.NavigateTo("posts/" + id);
    }

    
}