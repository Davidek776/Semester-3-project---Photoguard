@page "/Login"
@using BlazorWasm.Services
@inject IAuthService authService
@inject NavigationManager navMgr






<body class="bg-gray-100">
<AuthorizeView>
    <NotAuthorized>

<div id="wrapper" class="flex flex-col justify-between h-screen">

    <!-- header-->
    <div class="bg-white py-4 shadow dark:bg-gray-800">
        <div class="max-w-6xl mx-auto">


            <div class="flex items-center lg:justify-between justify-around">

                <a href="/posts/all">
                    <img src="assets/images/logo.png" alt="" class="w-32">
                </a>

                <div class="capitalize flex font-semibold hidden lg:block my-2 space-x-3 text-center text-sm">
                    <a href="/Login" class="py-3 px-4">Login</a>
                    <a href="/Register" class="bg-pink-500 pink-500 px-6 py-3 rounded-md shadow text-white">Register</a>
                </div>

            </div>
        </div>
    </div>

    <!-- Content-->
    <div>
        <div class="lg:p-12 max-w-md max-w-xl lg:my-0 my-12 mx-auto p-6 space-y-">
            <h1 class="lg:text-3xl text-xl font-semibold  mb-6"> Log in</h1>
            <p class="mb-2 text-black text-lg"> Username</p>
            <form action="">
                <input type="text" placeholder="John Smith" @bind="userName" class="bg-gray-200 mb-2 shadow-none dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
                <input type="password" placeholder="***********" @bind="password" class="bg-gray-200 mb-2 shadow-none dark:bg-gray-800" style="border: 1px solid #d3d5d8 !important;">
                <div class="flex justify-between my-4">
                    <div class="checkbox">
                        <input type="checkbox" id="chekcbox1" checked>
                        <label for="chekcbox1"><span class="checkbox-icon"></span>Remember Me</label>
                    </div>

                </div>
                  @if (!string.IsNullOrEmpty(errorLabel))
                            {
                                <div class="field">
                                    <label style="color: red">
                                        @errorLabel
                                    </label>
                                </div>
                            }
                <button  @onclick="LoginAsync"  @onclick:preventDefault="true"  class="bg-gradient-to-br from-pink-500 py-3 rounded-md text-white text-xl to-red-400 w-full">Login</button>
                <div class="text-center mt-5 space-x-2">
                    <p class="text-base"> Not registered? <a href="/Register" class="text-pink-700 font-semibold"> Create a account </a> or contine as <a href="/posts/all" class="text-pink-700 font-semibold">Guest</a></p>
                    <p class="text-base mt-1"> Log in as <a href="/admin/Login" class="text-pink-700 font-semibold"> Admin </a> </p>

                    </div>
            </form>
        </div>
    </div>

    <!-- Footer -->

    <div class="lg:mb-5 py-3 uk-link-reset">
        <div class="flex flex-col items-center justify-between lg:flex-row max-w-6xl mx-auto lg:space-y-0 space-y-3">
            <div class="flex space-x-2 text-gray-700 uppercase">

            </div>
            <p class="capitalize"> © copyright 2020 by Instello</p>
        </div>
    </div>

</div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>

        </div>
    </Authorized>
</AuthorizeView>
</body>

@code {
    private string userName;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        //Console.WriteLine("HERE");

        errorLabel = "";
        try
        {
            await authService.LoginAsync(userName, password);
            navMgr.NavigateTo("/posts/all");

     //Console.WriteLine("HERE");

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
}
